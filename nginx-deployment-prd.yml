apiVersion: v1
kind: ConfigMap
metadata:
  name: app-rp-config-cm
  namespace: common
data:
  nginx.conf: |
    user www-data;
    worker_processes auto;
    pid /run/nginx.pid;
    
    events {
        worker_connections 1024;
    }
    
    http {
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        error_log /var/log/nginx/error.log;
        gzip on;
        gzip_disable "msie6";
        include /etc/nginx/conf.d/app.conf;
    }

  app.conf: |
    upstream jenkins {
      keepalive 32; # keepalive connections
      server 52.226.137.133; # jenkins ip and port
    }
    
    # Required for Jenkins websocket agents
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }
    
    server {
      listen          80;       # Listen on port 80 for IPv4 requests
      #server_name     jenkins.example.com;  # replace 'jenkins.example.com' with your server domain name
      
      # this is the jenkins web root directory
      # (mentioned in the output of "systemctl cat jenkins")
      root            /var/run/jenkins/war/;
      
      access_log      /var/log/nginx/jenkins.access.log;
      error_log       /var/log/nginx/jenkins.error.log;
      
      # pass through headers from Jenkins that Nginx considers invalid
      ignore_invalid_headers off;
      
      location ~ "^/static/[0-9a-fA-F]{8}\/(.*)" {
        # rewrite all static files into requests to the root
        # E.g /static/12345678/css/something.css will become /css/something.css
        rewrite "^/static/[0-9a-fA-F]{8}\/(.*)" /$1 last;
      }
      
      location /userContent {
        # have nginx handle all the static requests to userContent folder
        # note : This is the $JENKINS_HOME dir
        root /var/lib/jenkins/;
        if (!-f $request_filename){
          # this file does not exist, might be a directory or a /**view** url
          rewrite (.*) /$1 last;
          break;
        }
        sendfile on;
      }
      
      location /jenkins {
          sendfile off;
          proxy_pass         http://52.226.137.133/login?from=%2F;
          proxy_redirect     default;
          proxy_http_version 1.1;
          
          # Required for Jenkins websocket agents
          proxy_set_header   Connection        $connection_upgrade;
          proxy_set_header   Upgrade           $http_upgrade;
          
          proxy_set_header   Host              $http_host;
          proxy_set_header   X-Real-IP         $remote_addr;
          proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
          proxy_max_temp_file_size 0;
          
          #this is the maximum upload size
          client_max_body_size       10m;
          client_body_buffer_size    128k;
          
          proxy_connect_timeout      90;
          proxy_send_timeout         90;
          proxy_read_timeout         90;
          proxy_request_buffering    off; # Required for HTTP CLI commands
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-reverse-proxy
  namespace: common
  labels:
    app: app-reverse-proxy
    category: reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-reverse-proxy
  template:
    metadata:
      labels:
        app: app-reverse-proxy
        category: reverse-proxy
    spec:
      containers:
      - name: app-reverse-proxy
        image: nginx
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - name: app-rp-config-cm-vol
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: app-rp-config-cm-vol
          mountPath: /etc/nginx/conf.d/app.conf
          subPath: app.conf
          readOnly: true
      volumes:
      - name: app-rp-config-cm-vol
        configMap:
          name: app-rp-config-cm

---
apiVersion: v1
kind: Service
metadata:
  name: app-reverse-proxy
  namespace: common
spec:
  ports:
  - name: http
    targetPort: 80
    port: 80
  selector:
    app: app-reverse-proxy
    category: reverse-proxy
  type: LoadBalancer
