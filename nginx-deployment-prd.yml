apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: common
data:
  default.conf: |
    server {
      listen 80;
      server_name prd.sytes.net;

      location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
      }

      location /config {
        proxy_pass http://configserver-service.common.svc.cluster.local/;
      }

      location /eureka {
        proxy_pass http://eureka-service.common.svc.cluster.local:8761/;
      }
      
      location /rabbitmq {
        proxy_pass http://rabitmq-service.common.svc.cluster.local:15672/;
      }
    }
  nginx.conf: |
   user  nginx;
    worker_processes  auto;
    
    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;
    
    events {
        worker_connections  1024;
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        client_max_body_size 100M;
    
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
    
        access_log  /var/log/nginx/access.log  main;
    
        sendfile        on;
    
        keepalive_timeout  65;
    
        include /etc/nginx/conf.d/*.conf;
    }
    
    stream {
      log_format basic '$remote_addr [$time_local] '
                       '$protocol $status $bytes_sent $bytes_received '
                       '$session_time';
    
      access_log  /var/log/nginx/nginx-access.log basic buffer=32k;
    
      server {
        listen 5672;
        proxy_pass rabitmq-service.common.svc.cluster.local:5672;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: common
  labels:
    deploy: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: common
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer